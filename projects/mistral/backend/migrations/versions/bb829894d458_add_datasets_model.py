"""add datasets model

Revision ID: bb829894d458
Revises: 7609e0e7f196
Create Date: 2020-10-15 14:59:06.292299

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "bb829894d458"
down_revision = "cf0a7cd845b5"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "datasets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("license_id", sa.Integer(), nullable=True),
        sa.Column("attribution_id", sa.Integer(), nullable=True),
        sa.Column(
            "category",
            sa.Enum("FOR", "OBS", "RAD", name="datasetcategories"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["attribution_id"],
            ["attribution.id"],
        ),
        sa.ForeignKeyConstraint(
            ["license_id"],
            ["license.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_datasets_name"), "datasets", ["name"], unique=False)
    op.create_table(
        "auth_association",
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.add_column(
        "attribution", sa.Column("group_license_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "attribution", "group_license", ["group_license_id"], ["id"]
    )
    op.drop_constraint("license_group_license_id_fkey", "license", type_="foreignkey")
    op.drop_column("license", "group_license_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "license",
        sa.Column("group_license_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "license_group_license_id_fkey",
        "license",
        "group_license",
        ["group_license_id"],
        ["id"],
    )
    op.drop_constraint(None, "attribution", type_="foreignkey")
    op.drop_column("attribution", "group_license_id")
    op.drop_table("auth_association")
    op.drop_index(op.f("ix_datasets_name"), table_name="datasets")
    op.drop_table("datasets")
    # ### end Alembic commands ###
