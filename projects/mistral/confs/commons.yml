version: "3.9"

services:
  backend:
    build: ${PROJECT_DIR}/builds/backend
    image: meteohub/backend:${RAPYDO_VERSION}

    volumes:
      - ${DATA_DIR}/user_repo:/data
      - ${DATA_DIR}/arkimet:/arkimet/datasets
      - ${DATA_DIR}/arkimet_conf:/arkimet/config
      # - ${DATA_DIR}/maps:/meteo
      - ${DATA_DIR}/opendata:/opendata
      - ${PROJECT_DIR}/scripts:/scripts

    environment:
      LASTDAYS: ${LASTDAYS}
      PLATFORM: ${PLATFORM}

  frontend:
    environment:
      INJECT_FRONTEND_DEBUG: ${FRONTEND_DEBUG}
      INJECT_LASTDAYS: ${LASTDAYS}
      INJECT_PLATFORM: ${PLATFORM}
      INJECT_MAPS_URL: ${MAPS_URL}
      INJECT_TILES_URL: ${TILES_URL}
    # volumes:
    #   - ${DATA_DIR}/maps:/meteo

  flower:
    build: ${PROJECT_DIR}/builds/backend
    image: meteohub/backend:${RAPYDO_VERSION}
    volumes:
      - ${DATA_DIR}/user_repo:/data
      - ${DATA_DIR}/arkimet:/arkimet/datasets
      - ${DATA_DIR}/arkimet_conf:/arkimet/config

  celery:
    build: ${PROJECT_DIR}/builds/backend
    image: meteohub/backend:${RAPYDO_VERSION}
    volumes:
      - ${DATA_DIR}/user_repo:/data
      - ${DATA_DIR}/arkimet:/arkimet/datasets
      - ${DATA_DIR}/arkimet_conf:/arkimet/config
      - ${DATA_DIR}/opendata:/opendata
    environment:
      LASTDAYS: ${LASTDAYS}
      PLATFORM: ${PLATFORM}

  celery-beat:
    build: ${PROJECT_DIR}/builds/backend
    image: meteohub/backend:${RAPYDO_VERSION}

  nifi:
    build:
      context: ${PROJECT_DIR}/builds/ingestor
      args:
        CURRENT_UID: ${CURRENT_UID}
        CURRENT_GID: ${CURRENT_GID}
    image: meteohub/nifi:${RAPYDO_VERSION}
    restart: always
    volumes:
      - ${PROJECT_DIR}/nifi/scripts:/home/nifi/ingest
      - ${DATA_DIR}/arkimet:/arkimet/datasets
      # - ${DATA_DIR}/nifi:/opt/nifi
      - ${DATA_DIR}/nifi/conf:/opt/nifi/nifi-current/conf
      - ${DATA_DIR}/nifi/database_repository:/opt/nifi/nifi-current/database_repository
      - ${DATA_DIR}/nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ${DATA_DIR}/nifi/content_repository:/opt/nifi/nifi-current/content_repository
      - ${DATA_DIR}/nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ${DATA_DIR}/nifi/state:/opt/nifi/nifi-current/state
      - ${DATA_DIR}/nifi/logs:/opt/nifi/nifi-current/logs

    environment:
      ACTIVATE: ${ACTIVATE_NIFI}
      APP_MODE: ${APP_MODE}
      CURRENT_UID: ${CURRENT_UID}
      CURRENT_GID: ${CURRENT_GID}

      NIFI_SENSITIVE_PROPS_KEY: ${NIFI_SENSITIVE_PROPS_KEY}

      ALCHEMY_HOST: ${ALCHEMY_HOST}
      ALCHEMY_PORT: ${ALCHEMY_PORT}
      ALCHEMY_USER: "${ALCHEMY_USER}"
      ALCHEMY_PASSWORD: "${ALCHEMY_PASSWORD}"

      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASSWORD: "${RABBITMQ_PASSWORD}"

      NIFI_EMAIL_FOR_ALERT: "${NIFI_EMAIL_FOR_ALERT}"
      NIFI_EMAIL_HEADER: "${NIFI_EMAIL_HEADER}"
      FTP_USER: "${FTP_USER}"
      FTP_PASSWORD: "${FTP_PASSWORD}"
      NIFI_DATABASE_URL: "${NIFI_DATABASE_URL}"
      MAX_DAYS_NIFI_DATA: ${MAX_DAYS_NIFI_DATA}
      MAX_DAYS_NIFI_LOGS: $MAX_DAYS_NIFI_LOGS
      NIFI_ARKIMET_CONFIG_PATH: ${NIFI_ARKIMET_CONFIG_PATH}
      NIFI_POSTGRES_DRIVER_PATH: "${NIFI_POSTGRES_DRIVER_PATH}"
      NIFI_TEMP_DIR: ${NIFI_TEMP_DIR}
      ARPAE_QUEUE: "${ARPAE_QUEUE}"
      MULTIMODEL_QUEUE: "${MULTIMODEL_QUEUE}"

    networks:
      default:
# volumes:
#   -

# networks:
#   -

