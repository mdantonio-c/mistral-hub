os: linux
dist: bionic
language: python
python:
  - 3.8
services:
  - docker
env:
  - STAGE=BACKEND
  - STAGE=FRONTEND
  - STAGE=CYPRESS BROWSER=chrome
  # - STAGE=CYPRESS BROWSER=firefox

script:
  - pip install --upgrade git+https://github.com/rapydo/do.git@0.7.4
  - export COMMIT_INFO_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
  - export COMMIT_INFO_MESSAGE="$(git show -s --pretty=%B)"
  - export COMMIT_INFO_SUBJECT="$(git show -s --pretty=%s)"
  - export COMMIT_INFO_BODY="$(git show -s --pretty=%b)"
  - export COMMIT_INFO_EMAIL="$(git show -s --pretty=%ae)"
  - export COMMIT_INFO_AUTHOR="$(git show -s --pretty=%an)"
  - export COMMIT_INFO_SHA="$(git show -s --pretty=%H)"
  - export COMMIT_INFO_TIMESTAMP="$(git show -s --pretty=%ct)"
  - export COMMIT_INFO_REMOTE="$(git config --get remote.origin.url)"
  - export CYPRESS_GROUP="$(git show -s --pretty=%H)"
  - TESTING=1 rapydo init
  - >
    if [[ "$STAGE" != "FRONTEND" ]]; then
      wget --quiet $DATASET_URL/arkimet.conf -O data/arkimet_conf/arkimet.conf;
      wget --quiet $DATASET_URL/sample.bufr -O data/arkimet_conf/sample.bufr;
      wget --quiet $DATASET_URL/arkimet.zip;
      unzip -q arkimet.zip -d data/;
      ls data/arkimet;

      rapydo pull;
      rapydo start;
      rapydo shell backend --command 'restapi wait';
      echo "dbadb wipe --dsn=postgresql://\$ALCHEMY_USER:\$ALCHEMY_PASSWORD@\$ALCHEMY_HOST:\$ALCHEMY_PORT/DBALLE" > init.sh;
      echo "dbadb import --dsn=postgresql://\$ALCHEMY_USER:\$ALCHEMY_PASSWORD@\$ALCHEMY_HOST:\$ALCHEMY_PORT/DBALLE --type=bufr /arkimet/config/sample.bufr" >> init.sh;
      docker cp init.sh mistral_backend_1:/tmp/init.sh;
      rapydo shell backend --command 'bash /tmp/init.sh';

    fi

  - >
    if [[ "$STAGE" == "BACKEND" ]]; then

      rapydo shell backend --command 'restapi tests --wait';
      docker cp mistral_backend_1:/code/coverage.xml coverage.xml;
      bash <(curl -s https://codecov.io/bash);

    elif [[ "$STAGE" == "FRONTEND" ]]; then

      rapydo -s frontend pull;
      rapydo -s frontend start;
      sleep 5;
      rapydo -s frontend logs;
      rapydo shell frontend --command "yarn install" || travis_terminate 1;
      rapydo shell frontend --command "yarn run test:single" || travis_terminate 1;
      cp data/mistral/karma/lcov.info .;
      bash <(curl -s https://codecov.io/bash);

    elif [[ "$STAGE" == "CYPRESS" ]]; then

      rapydo shell backend --command 'restapi wait';
      rapydo shell backend --detach --command "restapi launch";
      rapydo -s frontend logs;
      rapydo shell frontend --command "yarn install" || travis_terminate 1;
      rapydo shell frontend --command "yarn run cypress:start:${BROWSER}" || travis_terminate 1;

    fi

notifications:
  email: true
